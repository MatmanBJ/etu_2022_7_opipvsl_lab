#include <string>
#include <sys/sem.h>

#ifndef SEM_FUNC_H
#define SEM_FUNC_H

/*
Номер семаформа в множественном семафоре:
0-й -- для файла (для отслеживания писателей, которые хотят писать)
1-й -- количество писателей, которые хотят записать
2-й -- количество читателей, которые хотят прочитать
3-й -- общее количество работающих программ
*/

using namespace std;

int sem_key = 501; // ключ для создания/открытия семафора
string file_name = "файл.txt"; // имя файла, чтобы записывать/считывать
struct sembuf sem_file_dec = {0, -1, 0}; // уменьшаем семафор на 1, отвечающий за доступ 1-го писателя к файлу
struct sembuf sem_file_in = {0, 1, 0}; // увеличиваем семафор на 1, отвечающий за доступ 1-го писателя к файлу
struct sembuf sem_writer_com = {1, 0, 0}; // сравниваем активных писателей с 0 и ждём, пока они станут =0
struct sembuf sem_writer_dec = {1, -1, 0}; // уменьшаем семафор на 1, отвечающий за активных писателей
struct sembuf sem_writer_in = {1, 1, 0}; // увеличиваем семафор на 1, отвечающий за активных писателей
struct sembuf sem_reader_com = {2, 0, 0}; // сравниваем активных читателей с 0 и ждём, пока они станут =0
struct sembuf sem_reader_dec = {2, -1, 0}; // уменьшаем семафор на 1, отвечающий за активных читателей
struct sembuf sem_reader_in = {2, 1, 0}; // увеличиваем семафор на 1, отвечающий за активных читателей
struct sembuf sem_proc_dec = {3, -1, 0}; // уменьшаем семафор на 1, отвечающий за число активных программ
struct sembuf sem_proc_in = {3, 1, 0}; // увеличиваем семафор на 1, отвечающий за число активных программ

#endif
